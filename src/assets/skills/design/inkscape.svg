<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="512"
   height="512"
   viewBox="0 0 512 512"
   fill="none"
   version="1.1"
   id="svg17"
   sodipodi:docname="inkscape.svg"
   inkscape:version="1.1.1 (3bf5ae0d25, 2021-09-20)"
   inkscape:export-filename="/home/vitor/Dev/mvitor.dev/src/assets/skills/design/inkscape.png"
   inkscape:export-xdpi="192"
   inkscape:export-ydpi="192"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview19"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:pageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     showgrid="false"
     inkscape:zoom="1.4882812"
     inkscape:cx="201.91076"
     inkscape:cy="143.11811"
     inkscape:window-width="1920"
     inkscape:window-height="1019"
     inkscape:window-x="0"
     inkscape:window-y="30"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer3"
     width="512px" />
  <defs
     id="defs15">
    <filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter6244"
       x="-0.083789737"
       y="-0.071267862"
       width="1.1429354"
       height="1.1302482">
      <feFlood
         flood-opacity="0.501961"
         flood-color="rgb(222,104,150)"
         result="flood"
         id="feFlood6234" />
      <feComposite
         in="flood"
         in2="SourceGraphic"
         operator="out"
         result="composite1"
         id="feComposite6236" />
      <feGaussianBlur
         in="composite1"
         stdDeviation="2"
         result="blur"
         id="feGaussianBlur6238" />
      <feOffset
         dx="-2"
         dy="-1"
         result="offset"
         id="feOffset6240" />
      <feComposite
         in="SourceGraphic"
         in2="offset"
         operator="in"
         result="composite2"
         id="feComposite6242" />
    </filter>
    <filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter6568"
       x="-0.083789737"
       y="-0.0589803"
       width="1.1429354"
       height="1.1425357">
      <feFlood
         flood-opacity="0.301961"
         flood-color="rgb(222,104,150)"
         result="flood"
         id="feFlood6558" />
      <feComposite
         in="flood"
         in2="SourceGraphic"
         operator="out"
         result="composite1"
         id="feComposite6560" />
      <feGaussianBlur
         in="composite1"
         stdDeviation="2"
         result="blur"
         id="feGaussianBlur6562" />
      <feOffset
         dx="-2"
         dy="2"
         result="offset"
         id="feOffset6564" />
      <feComposite
         in="SourceGraphic"
         in2="offset"
         operator="in"
         result="composite2"
         id="feComposite6566" />
    </filter>
    <filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Drop Shadow"
       id="filter1809"
       x="-0.088718545"
       y="-0.088470482"
       width="1.1774371"
       height="1.176941">
      <feFlood
         flood-opacity="0.501961"
         flood-color="rgb(199,171,22)"
         result="flood"
         id="feFlood1799" />
      <feComposite
         in="flood"
         in2="SourceGraphic"
         operator="out"
         result="composite1"
         id="feComposite1801" />
      <feGaussianBlur
         in="composite1"
         stdDeviation="3"
         result="blur"
         id="feGaussianBlur1803" />
      <feOffset
         dx="0"
         dy="0"
         result="offset"
         id="feOffset1805" />
      <feComposite
         in="SourceGraphic"
         in2="offset"
         operator="in"
         result="composite2"
         id="feComposite1807" />
    </filter>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath13298">
      <rect
         style="opacity:1;fill:#ffffff;fill-opacity:0.98932;stroke:none;stroke-width:6;paint-order:stroke markers fill"
         id="rect13300"
         width="122"
         height="122"
         x="-46.930252"
         y="20.721142"
         transform="rotate(-37.247163)" />
    </clipPath>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient990"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="0"
       gradientTransform="matrix(4.1967213,0,0,4.1967213,0,9.7556262e-5)">
      <meshrow
         id="meshrow61562">
        <meshpatch
           id="meshpatch61564">
          <stop
             path="c 2.98228,0  5.96455,0  8.94682,0"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61566" />
          <stop
             path="c 3.55271e-14,18.5674  13.7452,17.8579  13.7451,36.4251"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61568" />
          <stop
             path="c -2.98224,0.000130522  -41.3878,-21.4219  -44.3702,-21.422"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61570" />
          <stop
             path="c 0.00015772,-18.5673  21.6785,3.5644  21.6783,-15.0031"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61572" />
        </meshpatch>
        <meshpatch
           id="meshpatch61574">
          <stop
             path="c 30.2469,0  29.2795,-24.8562  59.5262,-24.8563"
             id="stop61576" />
          <stop
             path="c 7.80647e-05,18.5674  2.3943,57.2141  2.3942,75.7814"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61578" />
          <stop
             path="c -30.2469,-0.000129126  -17.9284,-14.5  -48.1753,-14.5"
             style="stop-color:#5c3472;stop-opacity:1"
             id="stop61580" />
        </meshpatch>
        <meshpatch
           id="meshpatch61582">
          <stop
             path="c 7.43763,-7.90087e-06  70.0244,12.7567  77.4619,12.7567"
             id="stop61584" />
          <stop
             path="c 0.000132453,18.5674  -10.1949,31.9965  -10.1951,50.564"
             style="stop-color:#cc3d94;stop-opacity:1"
             id="stop61586" />
          <stop
             path="c -7.43728,-0.000271145  -57.435,12.4606  -64.8726,12.4607"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61588" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow61590">
        <meshpatch
           id="meshpatch61592">
          <stop
             path="c 2.77343e-05,9.59632  24.0316,45.3025  24.031,54.8989"
             id="stop61594" />
          <stop
             path="c -2.98146,0.000756086  -43.7404,-6.83282  -46.7227,-6.83282"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61596" />
          <stop
             path="c 3.95045e-15,-9.59617  -21.6783,-59.8914  -21.6785,-69.4881"
             style="stop-color:#5c3472;stop-opacity:1"
             id="stop61598" />
        </meshpatch>
        <meshpatch
           id="meshpatch61600">
          <stop
             path="c -0.000171666,9.59607  22.452,10.9589  22.4517,20.5552"
             id="stop61602" />
          <stop
             path="c -30.2469,-0.000717268  -16.3492,19.8428  -46.596,19.8437"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61604" />
        </meshpatch>
        <meshpatch
           id="meshpatch61606">
          <stop
             path="c 0.00022036,9.59592  -13.7398,36.43  -13.7398,46.0261"
             id="stop61608" />
          <stop
             path="c -7.43753,0  -21.2435,-13.0105  -28.6811,-13.0102"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61610" />
        </meshpatch>
      </meshrow>
      <meshrow
         id="meshrow61612">
        <meshpatch
           id="meshpatch61614">
          <stop
             path="c 0.000763531,12.5031  -13.7235,38.1329  -13.7231,50.6359"
             id="stop61616" />
          <stop
             path="c -2.98196,-0.000589198  -60.6891,-3.66661  -63.6712,-3.66641"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61618" />
          <stop
             path="c -2.41224e-05,-12.5032  30.6718,-41.3004  30.6716,-53.8023"
             style="stop-color:#5c3472;stop-opacity:1"
             id="stop61620" />
        </meshpatch>
        <meshpatch
           id="meshpatch61622">
          <stop
             path="c -0.000125185,12.5031  -9.47882,54.7315  -9.47882,67.2348"
             id="stop61624" />
          <stop
             path="c -30.2469,8.45577e-06  -20.5939,3.24487  -50.8403,3.2448"
             style="stop-color:#1a1c28;stop-opacity:1"
             id="stop61626" />
        </meshpatch>
        <meshpatch
           id="meshpatch61628">
          <stop
             path="c -1.42109e-14,12.5031  -2.84217e-14,25.0062  -2.84217e-14,37.5093"
             id="stop61630" />
          <stop
             path="c -7.43755,0  -30.7223,16.715  -38.1599,16.7153"
             style="stop-color:#5c3472;stop-opacity:1"
             id="stop61632" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <filter
       style="color-interpolation-filters:sRGB"
       inkscape:label="Noise Fill"
       id="filter1160"
       x="0"
       y="0"
       width="1"
       height="1">
      <feTurbulence
         type="fractalNoise"
         baseFrequency="4 4"
         numOctaves="5"
         seed="34"
         result="turbulence"
         id="feTurbulence1144" />
      <feComposite
         in="SourceGraphic"
         in2="turbulence"
         operator="in"
         result="composite1"
         id="feComposite1146" />
      <feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 2 -0.5 "
         result="color"
         id="feColorMatrix1148" />
      <feFlood
         flood-opacity="0"
         flood-color="rgb(21,40,57)"
         result="flood"
         id="feFlood1150" />
      <feMerge
         result="merge"
         id="feMerge1156">
        <feMergeNode
           in="flood"
           id="feMergeNode1152" />
        <feMergeNode
           in="color"
           id="feMergeNode1154" />
      </feMerge>
      <feComposite
         in2="SourceGraphic"
         operator="in"
         result="composite2"
         id="feComposite1158" />
    </filter>
  </defs>
  <g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="Layer 1"
     style="display:inline">
    <path
       d="M 512,9.7556262e-5 H 0 V 512.0001 h 512 z"
       fill="#f9f9f9"
       id="path2008"
       style="fill:#1a1c28;fill-opacity:1;stroke-width:4.19672" />
    <path
       d="M 512,9.7556262e-5 H 0 V 512.0001 h 512 z"
       fill="#f9f9f9"
       id="path2"
       style="opacity:0.4;fill:url(#meshgradient990);fill-opacity:1;stroke-width:4.19672" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="Layer 3"
     style="display:inline">
    <path
       id="path10832"
       style="display:inline;opacity:0.15;fill:#cc3d94;fill-opacity:0.998206;stroke-width:0.999999;filter:url(#filter1160)"
       d="m 60.79688,20.25391 c -1.2435,0.026 -2.47058,0.29687 -3.60938,0.79687 -1.1388,0.5 -2.16654,1.21939 -3.02734,2.11719 v 0.01 l -32.3086,33.73242 c -0.5134,0.5367 -0.88101,1.19401 -1.07031,1.91211 -0.1894,0.7181 -0.19382,1.47336 -0.0117,2.19336 0.1821,0.72 0.54474,1.38203 1.05274,1.92383 0.508,0.5418 1.14476,0.94573 1.85156,1.17383 l 13.73633,4.42187 c 0.2109,0.0679 0.39675,0.19624 0.53515,0.36914 0.1385,0.173 0.22404,0.38292 0.24414,0.60352 0.0201,0.2207 -0.026,0.44357 -0.13086,0.63867 -0.1049,0.1952 -0.26388,0.35408 -0.45898,0.45898 l -6.20703,3.31641 c -0.3119,0.1669 -0.56828,0.42027 -0.73828,0.73047 -0.1699,0.3103 -0.24605,0.66488 -0.21875,1.01758 0.0274,0.3527 0.15724,0.68835 0.37304,0.96875 0.2158,0.2803 0.50975,0.49267 0.84375,0.60937 l 16.82813,5.88281 c 0.2898,0.1014 0.55096,0.271 0.75976,0.4961 0.2087,0.2251 0.3582,0.49832 0.4375,0.79492 0.0792,0.2965 0.0841,0.60705 0.0156,0.90625 -0.0686,0.2992 -0.2077,0.57805 -0.4082,0.81055 l -2.89063,3.35547 c -0.2331,0.2704 -0.3928,0.59601 -0.4668,0.94531 -0.074,0.3493 -0.0586,0.71103 0.0449,1.05273 0.1035,0.3417 0.29157,0.65275 0.54687,0.90235 0.2554,0.2495 0.57006,0.42979 0.91406,0.52539 l 5.9961,1.65234 c 0.6049,0.1661 1.15858,0.47991 1.61328,0.91211 0.4546,0.4321 0.79559,0.97071 0.99219,1.56641 l 0.58203,1.76171 c 0.1734,0.5252 0.4512,1.01008 0.8164,1.42579 0.3653,0.415 0.8098,0.7522 1.3086,0.99218 0.4987,0.239 1.04115,0.37539 1.59375,0.40039 0.5526,0.024 1.10484,-0.0648 1.62304,-0.25781 l 9.68946,-3.61914 c 0.2195,-0.0813 0.41334,-0.22024 0.56054,-0.40234 0.1472,-0.1821 0.2419,-0.39916 0.2754,-0.63086 0.0335,-0.2317 0.004,-0.46915 -0.0859,-0.68555 -0.0895,-0.2163 -0.23438,-0.40462 -0.42188,-0.54492 l -1.75781,-1.32031 c -0.2617,-0.1968 -0.46901,-0.45762 -0.59961,-0.75782 -0.1306,-0.30029 -0.18098,-0.62948 -0.14648,-0.95507 0.0345,-0.3256 0.15315,-0.63615 0.34375,-0.90235 0.1907,-0.2662 0.44704,-0.47783 0.74414,-0.61523 L 82.88281,85.25 c 0.4784,-0.2199 0.88981,-0.56244 1.19141,-0.99414 0.3016,-0.4316 0.48144,-0.93604 0.52344,-1.46094 0.042,-0.5249 -0.056,-1.05139 -0.28516,-1.52539 -0.2292,-0.4741 -0.58018,-0.87877 -1.01758,-1.17187 l -5.06836,-3.39063 c -0.228,-0.1522 -0.41064,-0.36323 -0.52734,-0.61133 -0.1167,-0.248 -0.16287,-0.52417 -0.13477,-0.79687 0.0281,-0.2727 0.12817,-0.53286 0.29297,-0.75195 0.1648,-0.219 0.38643,-0.38764 0.64063,-0.49024 l 19.83203,-8.0918 c 0.8404,-0.3432 1.58381,-0.88738 2.16601,-1.58398 0.582,-0.6966 0.98583,-1.52606 1.17383,-2.41406 0.189,-0.8881 0.1572,-1.80865 -0.0918,-2.68164 -0.249,-0.873 -0.70793,-1.67118 -1.33593,-2.32618 L 67.83008,23.16797 c -0.907,-0.9461 -2.00014,-1.69371 -3.21094,-2.19531 -1.2108,-0.5016 -2.51196,-0.74625 -3.82226,-0.71875 z m -0.0996,2.88867 c 0.10259,-0.002 0.20599,-0.002 0.30859,0 1.7611,0.0309 3.43948,0.75126 4.67578,2.00586 l 12.13281,12.3164 c 0.2028,0.206 0.35959,0.45071 0.46289,0.72071 0.1034,0.2699 0.15012,0.55885 0.13672,0.84765 l -0.0898,1.8711 c -0.004,0.0759 -0.027,0.15039 -0.0703,0.21289 -0.0434,0.0625 -0.10393,0.11062 -0.17383,0.14062 -0.0699,0.0301 -0.14746,0.0409 -0.22266,0.0293 -0.0752,-0.0116 -0.14562,-0.044 -0.20312,-0.0937 l -4.61133,-3.98633 c -0.0798,-0.0683 -0.1758,-0.11461 -0.2793,-0.13281 -0.1036,-0.0182 -0.21019,-0.008 -0.30859,0.0293 -0.0984,0.0371 -0.18616,0.0996 -0.25196,0.18164 -0.0659,0.0819 -0.10804,0.17921 -0.12304,0.28321 l -0.78516,5.52539 c -0.0127,0.0877 -0.0437,0.17104 -0.0937,0.24414 -0.0501,0.0731 -0.11626,0.13413 -0.19336,0.17773 -0.0772,0.0436 -0.16355,0.069 -0.25195,0.0742 -0.0885,0.005 -0.17807,-0.009 -0.25977,-0.043 l -4.04101,-1.71289 c -0.2576,-0.1086 -0.53791,-0.15311 -0.81641,-0.12891 -0.2785,0.0243 -0.54625,0.11618 -0.78125,0.26758 l -5,3.2168 c -0.1769,0.1147 -0.37819,0.18543 -0.58789,0.20703 -0.2098,0.0217 -0.42059,-0.006 -0.61719,-0.082 -0.1967,-0.076 -0.37307,-0.19827 -0.51367,-0.35547 -0.1406,-0.1571 -0.24121,-0.34493 -0.29492,-0.54883 l -2.02539,-7.64062 c -0.0154,-0.0581 -0.0488,-0.11069 -0.0937,-0.15039 -0.045,-0.0397 -0.10066,-0.0643 -0.16016,-0.0723 -0.0596,-0.008 -0.11993,8.5e-4 -0.17383,0.0273 -0.054,0.0265 -0.0988,0.0691 -0.1289,0.12109 l -3.22266,5.64453 c -0.1254,0.221 -0.30754,0.40385 -0.52734,0.53125 -0.2199,0.1274 -0.46856,0.19446 -0.72266,0.19336 l -6.43945,-0.0488 c -0.1758,-0.002 -0.34847,-0.0394 -0.50977,-0.10937 -0.1612,-0.07 -0.30643,-0.17153 -0.42773,-0.29883 -0.1213,-0.1273 -0.2172,-0.27886 -0.2793,-0.44336 -0.0621,-0.1645 -0.0908,-0.33797 -0.084,-0.51367 l 0.0703,-1.77735 c 0.0335,-0.8625 0.38292,-1.68368 0.98242,-2.30468 L 56.04115,25.19921 c 1.2233,-1.2681 2.89495,-2.00744 4.65625,-2.05664 z m -14.625,47.4043 c 0.003,-1.1e-4 0.007,-1.1e-4 0.01,0 0.0184,0.002 0.0367,0.005 0.0547,0.01 v -0.006 l 16.51172,3.20703 c 0.1644,0.0319 0.31303,0.11658 0.42383,0.24218 0.1108,0.1255 0.17815,0.28408 0.18945,0.45118 0.0113,0.1671 -0.034,0.33335 -0.12695,0.47265 -0.0928,0.1394 -0.22822,0.24503 -0.38672,0.29883 l -1.14258,0.39258 c -1.82289,0.6201 -3.80895,0.55817 -5.58985,-0.17383 L 45.91823,71.29111 c -0.0848,-0.0332 -0.15387,-0.0958 -0.19727,-0.17578 -0.0434,-0.08 -0.0575,-0.17252 -0.0391,-0.26172 0.0184,-0.0891 0.0671,-0.16831 0.13867,-0.22461 0.0715,-0.0563 0.16096,-0.0852 0.25196,-0.082 z m 48.84375,8.23046 c -0.918,0.0311 -1.81239,0.30663 -2.5879,0.79883 l -3.0625,1.93555 c -0.2391,0.1509 -0.42193,0.37467 -0.52343,0.63867 -0.1014,0.2639 -0.11546,0.55397 -0.0391,0.82617 0.0764,0.2723 0.2389,0.51295 0.4629,0.68555 0.224,0.1726 0.49659,0.26699 0.77929,0.27148 l 8.22657,0.11914 v -0.004 c 0.3686,0.004 0.72955,-0.10444 1.03515,-0.31054 0.3057,-0.2062 0.54158,-0.50045 0.67578,-0.84375 0.1343,-0.3434 0.16067,-0.71933 0.0762,-1.07813 -0.0848,-0.3587 -0.27708,-0.68269 -0.55078,-0.92968 L 98.51954,80.0878 c -0.9879,-0.8844 -2.27831,-1.35385 -3.60351,-1.31055 z m -55.4961,7.08399 c -0.4052,0.0241 -0.79895,0.13552 -1.15625,0.32812 -0.3574,0.1926 -0.66911,0.46181 -0.91211,0.78711 -0.243,0.3252 -0.41269,0.69841 -0.49609,1.09571 -0.0833,0.3973 -0.0781,0.80762 0.0137,1.20312 l 0.0156,0.0742 c 0.1063,0.4597 0.32471,0.88634 0.63671,1.24024 0.3121,0.35389 0.70759,0.6241 1.1504,0.7871 0.44279,0.163 0.91961,0.21359 1.38671,0.14649 0.467,-0.067 0.90997,-0.2483 1.28907,-0.5293 l 3.61328,-2.67578 c 0.1789,-0.1327 0.31402,-0.31684 0.38672,-0.52734 0.0726,-0.2106 0.0786,-0.43755 0.0195,-0.65235 -0.0591,-0.2148 -0.18146,-0.40698 -0.35157,-0.55078 -0.17009,-0.1439 -0.37996,-0.23336 -0.60156,-0.25586 l -4.54687,-0.46093 c -0.1484,-0.0152 -0.29827,-0.0183 -0.44727,-0.01 z M 87.2461,86.4668 c -0.2596,0.009 -0.51202,0.0852 -0.73242,0.22265 -0.2204,0.1375 -0.40084,0.33155 -0.52344,0.56055 -0.1226,0.2291 -0.18368,0.4864 -0.17578,0.74609 0.008,0.2597 0.0845,0.51318 0.22071,0.73438 l 0.45117,0.73437 c 0.1876,0.3962 0.47177,0.7381 0.82617,0.9961 0.3544,0.258 0.76852,0.42367 1.20312,0.48047 0.43471,0.0568 0.87636,0.004 1.28516,-0.1543 0.4088,-0.1583 0.77149,-0.41725 1.05469,-0.75195 0.2189,-0.326 0.34725,-0.70401 0.37305,-1.09571 0.0257,-0.3918 -0.0522,-0.78296 -0.22657,-1.13476 -0.1744,-0.3518 -0.44017,-0.65049 -0.76757,-0.86719 -0.3273,-0.2168 -0.70566,-0.34409 -1.09766,-0.36719 L 87.38478,86.4668 c -0.0463,-0.002 -0.0924,-0.002 -0.13868,0 z"
       transform="matrix(4.1967213,0,0,4.1967213,0,9.7556262e-5)" />
    <path
       id="path8"
       d="m 60.79688,20.25391 c -1.2435,0.026 -2.47058,0.29687 -3.60938,0.79687 -1.1388,0.5 -2.16654,1.21939 -3.02734,2.11719 v 0.01 l -32.3086,33.73239 c -0.5134,0.5367 -0.88101,1.19401 -1.07031,1.91211 -0.1894,0.7181 -0.19382,1.47336 -0.0117,2.19336 0.1821,0.72 0.54474,1.38202 1.05274,1.92382 0.50799,0.5418 1.14476,0.94573 1.85156,1.17383 l 13.73633,4.42188 c 0.21089,0.0679 0.39675,0.19624 0.53515,0.36914 0.1385,0.173 0.22404,0.38291 0.24414,0.60351 0.0201,0.2207 -0.026,0.44357 -0.13086,0.63867 -0.1049,0.1952 -0.26388,0.35409 -0.45898,0.45899 l -6.20703,3.31641 c -0.3119,0.16689 -0.56828,0.42026 -0.73828,0.73046 -0.1699,0.3103 -0.24605,0.66488 -0.21875,1.01758 0.0274,0.3527 0.15724,0.68835 0.37304,0.96875 0.2158,0.2803 0.50975,0.49268 0.84375,0.60938 l 16.82813,5.88281 c 0.2898,0.1014 0.55096,0.27099 0.75976,0.49609 0.2087,0.2251 0.3582,0.49833 0.4375,0.79493 0.0792,0.29649 0.0841,0.60705 0.0156,0.90625 -0.0686,0.2992 -0.2077,0.57804 -0.4082,0.81054 l -2.89062,3.35547 c -0.2331,0.2704 -0.3928,0.59601 -0.4668,0.94531 -0.074,0.3493 -0.0586,0.71104 0.0449,1.05274 0.1035,0.3417 0.29157,0.65274 0.54687,0.90234 0.2554,0.2495 0.57007,0.42979 0.91407,0.52539 l 5.99609,1.65235 c 0.6049,0.1661 1.15858,0.47991 1.61328,0.91211 0.4546,0.4321 0.79559,0.9707 0.99219,1.5664 l 0.58203,1.76172 c 0.1734,0.5252 0.45121,1.01008 0.81641,1.42578 0.3653,0.415 0.80979,0.75219 1.30859,0.99219 0.4987,0.239 1.04115,0.37539 1.59375,0.40039 0.5526,0.024 1.10485,-0.0648 1.62305,-0.25781 l 9.68945,-3.61719 c 0.2195,-0.0813 0.41335,-0.2222 0.56055,-0.4043 0.1472,-0.1821 0.24189,-0.39916 0.27539,-0.63086 0.0335,-0.2317 0.004,-0.46914 -0.0859,-0.68554 -0.0895,-0.2163 -0.23438,-0.40463 -0.42188,-0.54493 l -1.75781,-1.32031 c -0.2617,-0.1968 -0.46901,-0.45761 -0.59961,-0.75781 -0.1306,-0.3003 -0.18098,-0.62948 -0.14648,-0.95508 0.0345,-0.3256 0.15315,-0.63614 0.34375,-0.90234 0.1907,-0.2662 0.44704,-0.47784 0.74414,-0.61524 L 82.88281,85.25 c 0.4784,-0.2199 0.88981,-0.56244 1.19141,-0.99414 0.3016,-0.4316 0.48144,-0.93604 0.52344,-1.46094 0.042,-0.5249 -0.056,-1.05139 -0.28516,-1.52539 -0.2292,-0.4741 -0.58018,-0.87877 -1.01758,-1.17187 l -5.06836,-3.39063 c -0.228,-0.1522 -0.41064,-0.36323 -0.52734,-0.61133 -0.1167,-0.248 -0.16287,-0.52417 -0.13477,-0.79687 0.0281,-0.2727 0.13013,-0.53286 0.29493,-0.75195 0.1648,-0.219 0.38447,-0.38764 0.63867,-0.49024 l 19.83203,-8.0918 c 0.8404,-0.3432 1.58381,-0.88738 2.16601,-1.58398 0.582,-0.6966 0.98583,-1.52606 1.17383,-2.41406 0.189,-0.8881 0.1572,-1.80864 -0.0918,-2.68164 -0.24899,-0.873 -0.70793,-1.67118 -1.33593,-2.32618 L 67.83008,23.16797 c -0.907,-0.9461 -2.00014,-1.69371 -3.21094,-2.19531 -1.2108,-0.5016 -2.51197,-0.74625 -3.82226,-0.71875 z m -0.0996,2.88867 c 0.10259,-0.002 0.20599,-0.002 0.30859,0 1.7611,0.0309 3.43948,0.75126 4.67578,2.00586 l 12.13281,12.3164 c 0.2028,0.206 0.35959,0.45071 0.46289,0.72071 0.1034,0.2699 0.15012,0.55885 0.13672,0.84765 l -0.0898,1.8711 c -0.004,0.0759 -0.027,0.15039 -0.0703,0.21289 -0.0434,0.0625 -0.10393,0.11062 -0.17383,0.14062 -0.0699,0.0301 -0.14745,0.0409 -0.22265,0.0293 -0.0752,-0.0116 -0.14563,-0.044 -0.20313,-0.0937 l -4.61133,-3.98633 c -0.0798,-0.0683 -0.17579,-0.11461 -0.27929,-0.13281 -0.1036,-0.0182 -0.2102,-0.008 -0.3086,0.0293 -0.0984,0.0371 -0.18615,0.0996 -0.25195,0.18164 -0.0659,0.0819 -0.10805,0.17921 -0.12305,0.28321 l -0.78515,5.52539 c -0.0127,0.0877 -0.0437,0.17104 -0.0937,0.24414 -0.0501,0.0731 -0.11626,0.13413 -0.19336,0.17773 -0.0772,0.0436 -0.16356,0.069 -0.25196,0.0742 -0.0885,0.005 -0.17806,-0.009 -0.25976,-0.043 l -4.04102,-1.71289 c -0.2576,-0.1086 -0.5379,-0.15311 -0.8164,-0.12891 -0.2785,0.0243 -0.54625,0.11618 -0.78125,0.26758 l -5,3.2168 c -0.1769,0.1147 -0.37819,0.18543 -0.58789,0.20703 -0.2098,0.0217 -0.42059,-0.006 -0.61719,-0.082 -0.1967,-0.076 -0.37307,-0.19827 -0.51367,-0.35547 -0.1406,-0.1571 -0.24122,-0.34493 -0.29493,-0.54883 l -2.02539,-7.64062 c -0.0154,-0.0581 -0.0487,-0.11069 -0.0937,-0.15039 -0.045,-0.0397 -0.10065,-0.0643 -0.16015,-0.0723 -0.0596,-0.008 -0.11993,8.4e-4 -0.17383,0.0273 -0.054,0.0265 -0.0988,0.0691 -0.12891,0.12109 l -3.22265,5.64453 c -0.1254,0.221 -0.30755,0.40385 -0.52735,0.53125 -0.2199,0.1274 -0.46855,0.19446 -0.72265,0.19336 l -6.43946,-0.0488 c -0.1758,-0.002 -0.34846,-0.0394 -0.50976,-0.10937 -0.1612,-0.07 -0.30644,-0.17153 -0.42774,-0.29883 -0.1213,-0.1273 -0.21719,-0.27886 -0.27929,-0.44336 -0.0621,-0.1645 -0.0908,-0.33797 -0.084,-0.51367 l 0.0703,-1.77735 c 0.0335,-0.8625 0.38292,-1.68368 0.98242,-2.30468 L 56.04115,25.19921 c 1.2233,-1.2681 2.89495,-2.00744 4.65625,-2.05664 z m -14.62501,47.4043 c 0.003,-1.1e-4 0.007,-1.1e-4 0.01,0 0.0184,0.002 0.0367,0.005 0.0547,0.01 v -0.006 l 16.51172,3.20703 c 0.1644,0.0319 0.31303,0.11658 0.42383,0.24218 0.1108,0.1255 0.17815,0.28408 0.18945,0.45118 0.0113,0.1671 -0.034,0.33335 -0.12695,0.47265 -0.0928,0.1394 -0.22822,0.24503 -0.38672,0.29883 l -1.14258,0.39258 c -1.82289,0.6201 -3.80894,0.55817 -5.58984,-0.17383 L 45.918,71.29101 c -0.0848,-0.0332 -0.15386,-0.0958 -0.19726,-0.17578 -0.0434,-0.08 -0.0575,-0.17252 -0.0391,-0.26172 0.0184,-0.0891 0.0671,-0.16831 0.13867,-0.22461 0.0715,-0.0563 0.16095,-0.0852 0.25195,-0.082 z m 48.84375,8.23046 c -0.918,0.0311 -1.8124,0.30663 -2.58789,0.79883 l -3.0625,1.93555 c -0.2391,0.1509 -0.42194,0.37467 -0.52344,0.63867 -0.1014,0.2639 -0.11547,0.55397 -0.0391,0.82617 0.0764,0.2723 0.23889,0.51295 0.46289,0.68555 0.224,0.1726 0.49659,0.26894 0.77929,0.27344 l 8.22657,0.11718 v -0.004 c 0.3686,0.004 0.72955,-0.10444 1.03515,-0.31054 0.3057,-0.2062 0.54158,-0.50045 0.67578,-0.84375 0.1343,-0.3434 0.16067,-0.71933 0.0762,-1.07813 -0.0848,-0.3587 -0.27708,-0.68269 -0.55078,-0.92968 L 98.51952,80.0878 c -0.9879,-0.8844 -2.27831,-1.35385 -3.60351,-1.31055 z m -55.4961,7.08399 c -0.4052,0.0241 -0.79895,0.13552 -1.15625,0.32812 -0.3574,0.1926 -0.66911,0.46181 -0.91211,0.78711 -0.243,0.3252 -0.41269,0.69841 -0.49609,1.09571 -0.0833,0.3973 -0.0781,0.80762 0.0137,1.20312 l 0.0156,0.0742 c 0.1063,0.4597 0.32472,0.88634 0.63672,1.24024 0.3121,0.3539 0.70759,0.62411 1.15039,0.7871 0.4428,0.163 0.91962,0.21359 1.38672,0.14649 0.467,-0.067 0.90996,-0.2483 1.28906,-0.5293 l 3.61328,-2.67578 c 0.1789,-0.1327 0.31402,-0.31684 0.38672,-0.52734 0.0726,-0.2106 0.0786,-0.43755 0.0195,-0.65235 -0.0591,-0.2148 -0.18146,-0.40698 -0.35156,-0.55078 -0.1701,-0.1439 -0.37997,-0.23336 -0.60157,-0.25586 l -4.54687,-0.46093 c -0.1484,-0.0152 -0.29827,-0.0184 -0.44727,-0.01 z m 47.82617,0.60547 c -0.2596,0.009 -0.51202,0.0871 -0.73242,0.22461 -0.2204,0.1375 -0.40084,0.32959 -0.52344,0.55859 -0.1226,0.2291 -0.18368,0.48639 -0.17578,0.74609 0.008,0.2597 0.0845,0.51318 0.22071,0.73438 l 0.45117,0.73437 c 0.1876,0.3962 0.47177,0.7381 0.82617,0.9961 0.3544,0.258 0.76852,0.42367 1.20313,0.48047 0.4347,0.0568 0.87635,0.004 1.28515,-0.1543 0.4088,-0.1583 0.77149,-0.41725 1.05469,-0.75195 0.2189,-0.326 0.34725,-0.70401 0.37305,-1.09571 0.0257,-0.3918 -0.0522,-0.78296 -0.22657,-1.13476 -0.1744,-0.3518 -0.44018,-0.65049 -0.76757,-0.86719 -0.3273,-0.2168 -0.70566,-0.34409 -1.09766,-0.36719 L 87.38477,86.4668 c -0.0463,-0.002 -0.0924,-0.002 -0.13868,0 z"
       style="fill:#818490;fill-opacity:1;filter:url(#filter1809)"
       transform="matrix(4.1967213,0,0,4.1967213,0,9.7556262e-5)" />
    <path
       id="path1757"
       style="fill:#cc3d94;fill-opacity:1;filter:url(#filter6244)"
       d="m 60.79688,20.25391 c -1.24351,0.026 -2.47058,0.29687 -3.60938,0.79687 -1.1388,0.5 -2.16654,1.21939 -3.02734,2.11719 v 0.01 l -32.3086,33.73242 c -0.5134,0.5367 -0.88101,1.19401 -1.07031,1.91211 -0.1894,0.7181 -0.19382,1.47336 -0.0117,2.19336 0.1821,0.72 0.54474,1.38203 1.05274,1.92383 0.508,0.5418 1.14476,0.94573 1.85156,1.17383 l 13.73633,4.42187 c 0.2109,0.0679 0.39675,0.19624 0.53515,0.36914 0.1385,0.173 0.22404,0.38292 0.24414,0.60352 0.0201,0.2207 -0.026,0.44357 -0.13086,0.63867 -0.1049,0.1952 -0.26388,0.35408 -0.45898,0.45898 l -6.20703,3.31641 c -0.3119,0.1669 -0.56828,0.42027 -0.73828,0.73047 -0.1699,0.3103 -0.24605,0.66488 -0.21875,1.01758 0.0274,0.3527 0.15724,0.68835 0.37304,0.96875 0.2158,0.2803 0.50975,0.49267 0.84375,0.60937 l 16.82813,5.88281 c 0.2898,0.1014 0.55096,0.271 0.75976,0.4961 0.2087,0.2251 0.3582,0.49832 0.4375,0.79492 0.0792,0.2965 0.0841,0.60705 0.0156,0.90625 -0.0686,0.2992 -0.2077,0.57805 -0.4082,0.81055 l -2.89063,3.35547 c -0.2331,0.2704 -0.3928,0.59601 -0.4668,0.94531 -0.074,0.3493 -0.0586,0.71103 0.0449,1.05273 0.1035,0.3417 0.29157,0.65275 0.54687,0.90235 0.2554,0.2495 0.57006,0.42979 0.91406,0.52539 l 5.9961,1.65234 c 0.6049,0.1661 1.15858,0.47991 1.61328,0.91211 0.4546,0.4321 0.79559,0.97071 0.99219,1.56641 l 0.58203,1.76171 c 0.1734,0.5252 0.4512,1.01009 0.8164,1.42579 0.3653,0.415 0.8098,0.75219 1.3086,0.99218 0.4987,0.239 1.04115,0.37539 1.59375,0.40039 0.5526,0.024 1.10484,-0.0648 1.62304,-0.25781 l 9.68946,-3.61719 c 0.2195,-0.0813 0.41334,-0.22219 0.56054,-0.40429 0.1472,-0.1821 0.24189,-0.39916 0.2754,-0.63086 0.0335,-0.2317 0.004,-0.46915 -0.0859,-0.68555 -0.0895,-0.2163 -0.23438,-0.40462 -0.42188,-0.54492 l -1.75781,-1.32031 c -0.2617,-0.1968 -0.46901,-0.45762 -0.59961,-0.75782 -0.1306,-0.3003 -0.18098,-0.62947 -0.14648,-0.95507 0.0345,-0.3256 0.15315,-0.63615 0.34375,-0.90235 0.1907,-0.2662 0.44704,-0.47783 0.74414,-0.61523 L 82.88281,85.25 c 0.4784,-0.2199 0.88981,-0.56244 1.19141,-0.99414 0.3016,-0.4316 0.48144,-0.93604 0.52344,-1.46094 0.042,-0.5249 -0.056,-1.05139 -0.28516,-1.52539 -0.2292,-0.4741 -0.58018,-0.87877 -1.01758,-1.17187 l -5.06836,-3.39063 c -0.228,-0.1522 -0.41064,-0.36323 -0.52734,-0.61133 -0.1167,-0.248 -0.16287,-0.52417 -0.13477,-0.79687 0.0281,-0.2727 0.12817,-0.53286 0.29297,-0.75195 0.1648,-0.219 0.38643,-0.38764 0.64063,-0.49024 l 19.83203,-8.0918 c 0.8404,-0.3432 1.58381,-0.88738 2.16601,-1.58398 0.582,-0.6966 0.98583,-1.52606 1.17383,-2.41406 0.189,-0.8881 0.1572,-1.80864 -0.0918,-2.68164 -0.24899,-0.873 -0.70793,-1.67118 -1.33593,-2.32618 L 67.83008,23.16797 c -0.907,-0.9461 -2.00014,-1.69371 -3.21094,-2.19531 -1.2108,-0.5016 -2.51196,-0.74625 -3.82226,-0.71875 z m -0.0996,2.88867 c 0.10259,-0.002 0.20599,-0.002 0.30859,0 1.7611,0.0309 3.43948,0.75126 4.67578,2.00586 l 12.13281,12.3164 c 0.2028,0.206 0.35959,0.45071 0.46289,0.72071 0.1034,0.2699 0.15012,0.55885 0.13672,0.84765 l -0.0898,1.8711 c -0.004,0.0759 -0.027,0.15039 -0.0703,0.21289 -0.0434,0.0625 -0.10393,0.11062 -0.17383,0.14062 -0.0699,0.0301 -0.14746,0.0409 -0.22266,0.0293 -0.0752,-0.0116 -0.14562,-0.044 -0.20312,-0.0937 l -4.61133,-3.98633 c -0.0798,-0.0683 -0.1758,-0.11461 -0.2793,-0.13281 -0.1036,-0.0182 -0.21019,-0.008 -0.30859,0.0293 -0.0984,0.0371 -0.18616,0.0996 -0.25196,0.18164 -0.0659,0.0819 -0.10804,0.17921 -0.12304,0.28321 l -0.78516,5.52539 c -0.0127,0.0877 -0.0437,0.17104 -0.0937,0.24414 -0.0501,0.0731 -0.11626,0.13413 -0.19336,0.17773 -0.0772,0.0436 -0.16355,0.069 -0.25195,0.0742 -0.0885,0.005 -0.17807,-0.009 -0.25977,-0.043 l -4.04101,-1.71289 c -0.2576,-0.1086 -0.53791,-0.15311 -0.81641,-0.12891 -0.2785,0.0243 -0.54625,0.11618 -0.78125,0.26758 l -5,3.2168 c -0.1769,0.1147 -0.37819,0.18543 -0.58789,0.20703 -0.2098,0.0217 -0.42059,-0.006 -0.61719,-0.082 -0.1967,-0.076 -0.37307,-0.19827 -0.51367,-0.35547 -0.1406,-0.1571 -0.24121,-0.34493 -0.29492,-0.54883 l -2.02539,-7.64062 c -0.0154,-0.0581 -0.0488,-0.11069 -0.0937,-0.15039 -0.045,-0.0397 -0.10066,-0.0643 -0.16016,-0.0723 -0.0596,-0.008 -0.11993,8.5e-4 -0.17383,0.0273 -0.054,0.0265 -0.0988,0.0691 -0.1289,0.12109 l -3.22266,5.64453 c -0.1254,0.221 -0.30754,0.40385 -0.52734,0.53125 -0.2199,0.1274 -0.46856,0.19446 -0.72266,0.19336 l -6.43945,-0.0488 c -0.1758,-0.002 -0.34847,-0.0394 -0.50977,-0.10937 -0.1612,-0.07 -0.30643,-0.17153 -0.42773,-0.29883 -0.1213,-0.1273 -0.2172,-0.27886 -0.2793,-0.44336 -0.0621,-0.1645 -0.0908,-0.33797 -0.084,-0.51367 l 0.0703,-1.77735 c 0.0335,-0.8625 0.38292,-1.68368 0.98242,-2.30468 L 56.04115,25.19921 c 1.2233,-1.2681 2.89495,-2.00744 4.65625,-2.05664 z m -14.625,47.4043 c 0.003,-1.1e-4 0.007,-1.1e-4 0.01,0 0.0184,0.002 0.0367,0.005 0.0547,0.01 v -0.006 l 16.51172,3.20703 c 0.1644,0.0319 0.31303,0.11658 0.42383,0.24218 0.1108,0.1255 0.17815,0.28408 0.18945,0.45118 0.0113,0.1671 -0.034,0.33335 -0.12695,0.47265 -0.0928,0.1394 -0.22822,0.24503 -0.38672,0.29883 l -1.14258,0.39258 c -1.82289,0.6201 -3.80895,0.55817 -5.58985,-0.17383 L 45.91823,71.29111 c -0.0848,-0.0332 -0.15387,-0.0958 -0.19727,-0.17578 -0.0434,-0.08 -0.0575,-0.17252 -0.0391,-0.26172 0.0184,-0.0891 0.0671,-0.16831 0.13867,-0.22461 0.0715,-0.0563 0.16096,-0.0852 0.25196,-0.082 z m 48.84375,8.23046 c -0.918,0.0311 -1.8124,0.30663 -2.5879,0.79883 l -3.0625,1.93555 c -0.2391,0.1509 -0.42193,0.37467 -0.52343,0.63867 -0.1014,0.2639 -0.11547,0.55397 -0.0391,0.82617 0.0764,0.2723 0.2389,0.51295 0.4629,0.68555 0.224,0.1726 0.49659,0.26894 0.77929,0.27344 l 8.22657,0.11718 v -0.004 c 0.36859,0.004 0.72955,-0.10444 1.03515,-0.31054 0.3057,-0.2062 0.54158,-0.50045 0.67578,-0.84375 0.1343,-0.3434 0.16067,-0.71933 0.0762,-1.07813 -0.0848,-0.3587 -0.27708,-0.68269 -0.55078,-0.92968 L 98.51954,80.0878 c -0.9879,-0.8844 -2.27831,-1.35385 -3.60351,-1.31055 z m -55.4961,7.08399 c -0.4052,0.0241 -0.79895,0.13552 -1.15625,0.32812 -0.3574,0.1926 -0.66911,0.46181 -0.91211,0.78711 -0.243,0.3252 -0.41269,0.69841 -0.49609,1.09571 -0.0833,0.3973 -0.0781,0.80762 0.0137,1.20312 l 0.0156,0.0742 c 0.1063,0.4597 0.32471,0.88634 0.63671,1.24024 0.3121,0.3539 0.70759,0.62411 1.1504,0.7871 0.4428,0.163 0.91961,0.21359 1.38671,0.14649 0.467,-0.067 0.90997,-0.2483 1.28907,-0.5293 l 3.61328,-2.67578 c 0.1789,-0.1327 0.31402,-0.31684 0.38672,-0.52734 0.0726,-0.2106 0.0786,-0.43755 0.0195,-0.65235 -0.0591,-0.2148 -0.18146,-0.40698 -0.35157,-0.55078 -0.17009,-0.1439 -0.37996,-0.23336 -0.60156,-0.25586 l -4.54687,-0.46093 c -0.1484,-0.0152 -0.29827,-0.0183 -0.44727,-0.01 z M 87.2461,86.4668 c -0.2596,0.009 -0.51202,0.0871 -0.73242,0.22461 -0.2204,0.1375 -0.40084,0.32959 -0.52344,0.55859 -0.1226,0.2291 -0.18368,0.48639 -0.17578,0.74609 0.008,0.2597 0.0845,0.51318 0.22071,0.73438 l 0.45117,0.73437 c 0.1876,0.3962 0.47177,0.7381 0.82617,0.9961 0.3544,0.258 0.76852,0.42367 1.20312,0.48047 0.4347,0.0568 0.87636,0.004 1.28516,-0.1543 0.4088,-0.1583 0.77149,-0.41725 1.05469,-0.75195 0.2189,-0.326 0.34725,-0.70401 0.37305,-1.09571 0.0257,-0.3918 -0.0522,-0.78296 -0.22657,-1.13476 -0.1744,-0.3518 -0.44017,-0.65049 -0.76757,-0.86719 -0.32731,-0.2168 -0.70566,-0.34409 -1.09766,-0.36719 L 87.38478,86.4668 c -0.0463,-0.002 -0.0924,-0.002 -0.13868,0 z"
       transform="matrix(4.1967213,0,0,4.1967213,0,9.7556262e-5)" />
    <path
       id="path1867"
       style="fill:#ffffff;fill-opacity:1;stroke-width:0.999999;filter:url(#filter6568)"
       d="m 60.79688,20.25391 c -1.2435,0.026 -2.47058,0.29687 -3.60938,0.79687 -1.1388,0.5 -2.16654,1.21939 -3.02734,2.11719 v 0.01 l -32.3086,33.73242 c -0.5134,0.5367 -0.88101,1.19401 -1.07031,1.91211 -0.1894,0.7181 -0.19382,1.47336 -0.0117,2.19336 0.1821,0.72 0.54474,1.38203 1.05274,1.92383 0.508,0.5418 1.14476,0.94573 1.85156,1.17383 l 13.73633,4.42187 c 0.2109,0.0679 0.39675,0.19624 0.53515,0.36914 0.1385,0.173 0.22404,0.38292 0.24414,0.60352 0.0201,0.2207 -0.026,0.44357 -0.13086,0.63867 -0.1049,0.1952 -0.26388,0.35408 -0.45898,0.45898 l -6.20703,3.31641 c -0.3119,0.1669 -0.56828,0.42027 -0.73828,0.73047 -0.1699,0.3103 -0.24605,0.66488 -0.21875,1.01758 0.0274,0.3527 0.15724,0.68835 0.37304,0.96875 0.2158,0.2803 0.50975,0.49267 0.84375,0.60937 l 16.82813,5.88281 c 0.2898,0.1014 0.55096,0.271 0.75976,0.4961 0.2087,0.2251 0.3582,0.49832 0.4375,0.79492 0.0792,0.2965 0.0841,0.60705 0.0156,0.90625 -0.0686,0.2992 -0.2077,0.57805 -0.4082,0.81055 l -2.89063,3.35547 c -0.2331,0.2704 -0.3928,0.59601 -0.4668,0.94531 -0.074,0.3493 -0.0586,0.71103 0.0449,1.05273 0.1035,0.3417 0.29157,0.65275 0.54687,0.90235 0.2554,0.2495 0.57006,0.42979 0.91406,0.52539 l 5.9961,1.65234 c 0.6049,0.1661 1.15858,0.47991 1.61328,0.91211 0.4546,0.4321 0.79559,0.97071 0.99219,1.56641 l 0.58203,1.76171 c 0.1734,0.5252 0.4512,1.01008 0.8164,1.42579 0.3653,0.415 0.8098,0.7522 1.3086,0.99218 0.4987,0.239 1.04115,0.37539 1.59375,0.40039 0.5526,0.024 1.10484,-0.0648 1.62304,-0.25781 l 9.68946,-3.61914 c 0.2195,-0.0813 0.41334,-0.22024 0.56054,-0.40234 0.1472,-0.1821 0.2419,-0.39916 0.2754,-0.63086 0.0335,-0.2317 0.004,-0.46915 -0.0859,-0.68555 -0.0895,-0.2163 -0.23438,-0.40462 -0.42188,-0.54492 l -1.75781,-1.32031 c -0.2617,-0.1968 -0.46901,-0.45762 -0.59961,-0.75782 -0.1306,-0.30029 -0.18098,-0.62948 -0.14648,-0.95507 0.0345,-0.3256 0.15315,-0.63615 0.34375,-0.90235 0.1907,-0.2662 0.44704,-0.47783 0.74414,-0.61523 L 82.88281,85.25 c 0.4784,-0.2199 0.88981,-0.56244 1.19141,-0.99414 0.3016,-0.4316 0.48144,-0.93604 0.52344,-1.46094 0.042,-0.5249 -0.056,-1.05139 -0.28516,-1.52539 -0.2292,-0.4741 -0.58018,-0.87877 -1.01758,-1.17187 l -5.06836,-3.39063 c -0.228,-0.1522 -0.41064,-0.36323 -0.52734,-0.61133 -0.1167,-0.248 -0.16287,-0.52417 -0.13477,-0.79687 0.0281,-0.2727 0.12817,-0.53286 0.29297,-0.75195 0.1648,-0.219 0.38643,-0.38764 0.64063,-0.49024 l 19.83203,-8.0918 c 0.8404,-0.3432 1.58381,-0.88738 2.16601,-1.58398 0.582,-0.6966 0.98583,-1.52606 1.17383,-2.41406 0.189,-0.8881 0.1572,-1.80865 -0.0918,-2.68164 -0.249,-0.873 -0.70793,-1.67118 -1.33593,-2.32618 L 67.83008,23.16797 c -0.907,-0.9461 -2.00014,-1.69371 -3.21094,-2.19531 -1.2108,-0.5016 -2.51196,-0.74625 -3.82226,-0.71875 z m -0.0996,2.88867 c 0.10259,-0.002 0.20599,-0.002 0.30859,0 1.7611,0.0309 3.43948,0.75126 4.67578,2.00586 l 12.13281,12.3164 c 0.2028,0.206 0.35959,0.45071 0.46289,0.72071 0.1034,0.2699 0.15012,0.55885 0.13672,0.84765 l -0.0898,1.8711 c -0.004,0.0759 -0.027,0.15039 -0.0703,0.21289 -0.0434,0.0625 -0.10393,0.11062 -0.17383,0.14062 -0.0699,0.0301 -0.14746,0.0409 -0.22266,0.0293 -0.0752,-0.0116 -0.14562,-0.044 -0.20312,-0.0937 l -4.61133,-3.98633 c -0.0798,-0.0683 -0.1758,-0.11461 -0.2793,-0.13281 -0.1036,-0.0182 -0.21019,-0.008 -0.30859,0.0293 -0.0984,0.0371 -0.18616,0.0996 -0.25196,0.18164 -0.0659,0.0819 -0.10804,0.17921 -0.12304,0.28321 l -0.78516,5.52539 c -0.0127,0.0877 -0.0437,0.17104 -0.0937,0.24414 -0.0501,0.0731 -0.11626,0.13413 -0.19336,0.17773 -0.0772,0.0436 -0.16355,0.069 -0.25195,0.0742 -0.0885,0.005 -0.17807,-0.009 -0.25977,-0.043 l -4.04101,-1.71289 c -0.2576,-0.1086 -0.53791,-0.15311 -0.81641,-0.12891 -0.2785,0.0243 -0.54625,0.11618 -0.78125,0.26758 l -5,3.2168 c -0.1769,0.1147 -0.37819,0.18543 -0.58789,0.20703 -0.2098,0.0217 -0.42059,-0.006 -0.61719,-0.082 -0.1967,-0.076 -0.37307,-0.19827 -0.51367,-0.35547 -0.1406,-0.1571 -0.24121,-0.34493 -0.29492,-0.54883 l -2.02539,-7.64062 c -0.0154,-0.0581 -0.0488,-0.11069 -0.0937,-0.15039 -0.045,-0.0397 -0.10066,-0.0643 -0.16016,-0.0723 -0.0596,-0.008 -0.11993,8.5e-4 -0.17383,0.0273 -0.054,0.0265 -0.0988,0.0691 -0.1289,0.12109 l -3.22266,5.64453 c -0.1254,0.221 -0.30754,0.40385 -0.52734,0.53125 -0.2199,0.1274 -0.46856,0.19446 -0.72266,0.19336 l -6.43945,-0.0488 c -0.1758,-0.002 -0.34847,-0.0394 -0.50977,-0.10937 -0.1612,-0.07 -0.30643,-0.17153 -0.42773,-0.29883 -0.1213,-0.1273 -0.2172,-0.27886 -0.2793,-0.44336 -0.0621,-0.1645 -0.0908,-0.33797 -0.084,-0.51367 l 0.0703,-1.77735 c 0.0335,-0.8625 0.38292,-1.68368 0.98242,-2.30468 L 56.04115,25.19921 c 1.2233,-1.2681 2.89495,-2.00744 4.65625,-2.05664 z m -14.625,47.4043 c 0.003,-1.1e-4 0.007,-1.1e-4 0.01,0 0.0184,0.002 0.0367,0.005 0.0547,0.01 v -0.006 l 16.51172,3.20703 c 0.1644,0.0319 0.31303,0.11658 0.42383,0.24218 0.1108,0.1255 0.17815,0.28408 0.18945,0.45118 0.0113,0.1671 -0.034,0.33335 -0.12695,0.47265 -0.0928,0.1394 -0.22822,0.24503 -0.38672,0.29883 l -1.14258,0.39258 c -1.82289,0.6201 -3.80895,0.55817 -5.58985,-0.17383 L 45.91823,71.29111 c -0.0848,-0.0332 -0.15387,-0.0958 -0.19727,-0.17578 -0.0434,-0.08 -0.0575,-0.17252 -0.0391,-0.26172 0.0184,-0.0891 0.0671,-0.16831 0.13867,-0.22461 0.0715,-0.0563 0.16096,-0.0852 0.25196,-0.082 z m 48.84375,8.23046 c -0.918,0.0311 -1.81239,0.30663 -2.5879,0.79883 l -3.0625,1.93555 c -0.2391,0.1509 -0.42193,0.37467 -0.52343,0.63867 -0.1014,0.2639 -0.11546,0.55397 -0.0391,0.82617 0.0764,0.2723 0.2389,0.51295 0.4629,0.68555 0.224,0.1726 0.49659,0.26699 0.77929,0.27148 l 8.22657,0.11914 v -0.004 c 0.3686,0.004 0.72955,-0.10444 1.03515,-0.31054 0.3057,-0.2062 0.54158,-0.50045 0.67578,-0.84375 0.1343,-0.3434 0.16067,-0.71933 0.0762,-1.07813 -0.0848,-0.3587 -0.27708,-0.68269 -0.55078,-0.92968 L 98.51954,80.0878 c -0.9879,-0.8844 -2.27831,-1.35385 -3.60351,-1.31055 z m -55.4961,7.08399 c -0.4052,0.0241 -0.79895,0.13552 -1.15625,0.32812 -0.3574,0.1926 -0.66911,0.46181 -0.91211,0.78711 -0.243,0.3252 -0.41269,0.69841 -0.49609,1.09571 -0.0833,0.3973 -0.0781,0.80762 0.0137,1.20312 l 0.0156,0.0742 c 0.1063,0.4597 0.32471,0.88634 0.63671,1.24024 0.3121,0.35389 0.70759,0.6241 1.1504,0.7871 0.44279,0.163 0.91961,0.21359 1.38671,0.14649 0.467,-0.067 0.90997,-0.2483 1.28907,-0.5293 l 3.61328,-2.67578 c 0.1789,-0.1327 0.31402,-0.31684 0.38672,-0.52734 0.0726,-0.2106 0.0786,-0.43755 0.0195,-0.65235 -0.0591,-0.2148 -0.18146,-0.40698 -0.35157,-0.55078 -0.17009,-0.1439 -0.37996,-0.23336 -0.60156,-0.25586 l -4.54687,-0.46093 c -0.1484,-0.0152 -0.29827,-0.0183 -0.44727,-0.01 z M 87.2461,86.4668 c -0.2596,0.009 -0.51202,0.0852 -0.73242,0.22265 -0.2204,0.1375 -0.40084,0.33155 -0.52344,0.56055 -0.1226,0.2291 -0.18368,0.4864 -0.17578,0.74609 0.008,0.2597 0.0845,0.51318 0.22071,0.73438 l 0.45117,0.73437 c 0.1876,0.3962 0.47177,0.7381 0.82617,0.9961 0.3544,0.258 0.76852,0.42367 1.20312,0.48047 0.43471,0.0568 0.87636,0.004 1.28516,-0.1543 0.4088,-0.1583 0.77149,-0.41725 1.05469,-0.75195 0.2189,-0.326 0.34725,-0.70401 0.37305,-1.09571 0.0257,-0.3918 -0.0522,-0.78296 -0.22657,-1.13476 -0.1744,-0.3518 -0.44017,-0.65049 -0.76757,-0.86719 -0.3273,-0.2168 -0.70566,-0.34409 -1.09766,-0.36719 L 87.38478,86.4668 c -0.0463,-0.002 -0.0924,-0.002 -0.13868,0 z"
       transform="matrix(4.1967213,0,0,4.1967213,0,9.7556262e-5)" />
  </g>
  <g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2"
     style="display:inline;mix-blend-mode:color-dodge">
    <g
       id="g1464"
       transform="matrix(4.1967213,0,0,4.1967213,0,2.2563012e-4)"
       style="mix-blend-mode:normal">
      <path
         d="M 122,-6.10352e-5 H 0 V 122 h 122 z"
         fill="#f9d61c"
         id="path1134"
         style="mix-blend-mode:color-dodge;fill:#5c3472;fill-opacity:1" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
